#!/usr/bin/env ruby

require 'octokit'

track_id = ENV['TRACK_ID']
language = ENV['LANGUAGE']

if !(track_id && language)
  STDERR.puts "Usage: TRACK_ID=<id> LANGUAGE=<language> bin/bootstrap"
  exit 1
end

tracks_dir = File.expand_path("../../../tracks", __FILE__)
dir = File.join(tracks_dir, track_id)

if File.exist?(dir)
  STDERR.puts("FATAL: %s already exists" % track_id)
end

require 'date'
require 'fileutils'

template = File.expand_path("../../../request-new-language-track", __FILE__)

system("cp -r %s %s" % [template, dir])
system("rm -rf %s" % File.join(dir, ".git"))
system("rm -rf %s" % File.join(dir, "bin/bootstrap"))
system("rm -rf %s" % File.join(dir, ".github/ISSUE_TEMPLATE.md"))
system("mv %s/TRACK_README.md %s/README.md" % [dir, dir])

f = File.join(dir, 'LICENSE')
contents = File.read(f)
File.open(f, "w") do |f|
  f.write contents.gsub(/\d{4}/, Date.today.year.to_s)
end

[
  "config.json",
  "README.md",
  "CHECKLIST.md",
  "TRAVIS.md",
  ".travis.yml",
].each do |name|
  f = File.join(dir, name)
  contents = File.read(f)
  File.open(f, "w") do |f|
    f.write contents.gsub("{{TRACK_ID}}", track_id).gsub("{{LANGUAGE}}", language)
  end
end

Dir.chdir dir

system("git init")

gitinfo = File.join(dir, ".git", "info")
FileUtils.mkdir_p(gitinfo)
[
  "CHECKLIST.md",
  "TRAVIS.md",
].each do |file|
  system("echo %s >> %s" % [file, File.join(gitinfo, "exclude")])
end

system("git add .")
system("git commit -m 'Bootstrap %s track'" % language)
system("hub create exercism/%s" % track_id)
system("git push origin master")

[
  "CHECKLIST.md",
  "TRAVIS.md",
].each do |file|
  system("hub issue create -F %s" % file)
end

client = Octokit::Client.new(access_token: ENV['ADMIN_ORG_TOKEN'])

repo_options = {
  :name => track_id,
  :description => "Exercism exercises in %s" % language,
  :homepage => "http://exercism.io/tracks/%s" % track_id,
  :has_projects => false,
  :has_wiki => false,
}
repo = client.edit_repository("exercism/%s" % track_id)

client.put('/repos/exercism/%s/topics' % track_id, {names: ["exercism-track", "exercism-exercises"], accept: 'application/vnd.github.mercy-preview+json'})

team_options = {
  :name => track_id,
  :description => "Maintainers of the Exercism %s track" % language,
  :privacy => 'closed',
  :parent_team_id => 1399433,
}
team = client.create_team('exercism', team_options.merge(accept: 'application/vnd.github.hellcat-preview+json'))
client.add_team_repository(team.id, 'exercism/%s' % track_id, permission: 'push')
